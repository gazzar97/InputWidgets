reactR::scaffoldReactShinyInput("numericInput_eduapps", list("@gazzar97/react-widgets" = "^1.1.0"), edit = FALSE)
system("npm install")
system("npm run build")
devtools::install()
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduappsInput("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
output$textOutput <- renderText({
sprintf("You entered: %s", input$textInput)
})
}
shinyApp(ui, server)
system("npm run build")
system("npm run build")
devtools::install()
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
output$textOutput <- renderText({
sprintf("You entered: %s", input$textInput)
})
}
shinyApp(ui, server)
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
print(input$textInput)
output$textOutput <- renderText({
})
}
shinyApp(ui, server)
devtools::install()
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
output$textOutput <- renderText({
sprintf("You entered: %d", input$textInput)
})
}
shinyApp(ui, server)
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
output$textOutput <- renderText({
x <- paste(input$textInput)
sprintf("You entered: %s", x)
})
}
shinyApp(ui, server)
system("npm run build")
devtools::install()
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
output$textOutput <- renderText({
print(input$textInput)
x <- paste(input$textInput)
sprintf("You entered: %s", x)
})
}
shinyApp(ui, server)
system("npm run build")
devtools::install()
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
output$textOutput <- renderText({
print(input$textInput)
x <- paste(input$textInput)
sprintf("You entered: %s", x)
})
}
shinyApp(ui, server)
system("npm run build")
devtools::install()
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
output$textOutput <- renderText({
print(input$textInput)
x <- paste(input$textInput)
sprintf("You entered: %s", x)
})
}
shinyApp(ui, server)
devtools::install()
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
output$textOutput <- renderText({
print(input$textInput)
x <- paste(input$textInput)
sprintf("You entered: %s", x)
})
}
shinyApp(ui, server)
reactR::scaffoldReactShinyInput("colorpicker", list("react-color" = "^2.17.0"), edit = FALSE)
system("npm run build")
system("npm run build")
system("npm run build")
devtools::install()
library(shiny)
library(InputWidgets)
ui <- fluidPage(
titlePanel("reactR Input Example"),
numericInput_eduapps("textInput"),
textOutput("textOutput")
)
server <- function(input, output, session) {
print(input$textInput)
output$textOutput <- renderText({
x <- paste(input$textInput)
sprintf("You entered: %s", x)
})
}
shinyApp(ui, server)
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
system("npm run build")
devtools::install()
shiny::runApp()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build")
devtools::install()
shiny::runApp()
system("npm run build") && devtools::install()
devtools::install()
shiny::runApp()
shiny::runApp()
